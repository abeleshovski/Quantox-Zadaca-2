{"version":3,"sources":["components/StartMenu/StartMenu.jsx","components/Game/RenderIncomplete.jsx","utils/IconStorage.js","style/icons/amazon.svg","style/icons/youtube.svg","style/icons/facebook.svg","style/icons/instagram.svg","style/icons/twitter.svg","style/icons/jedi-order.svg","style/icons/apple.svg","style/icons/battle-net.svg","style/icons/google.svg","style/icons/github.svg","style/icons/firefox.svg","style/icons/chrome.svg","style/icons/cloudflare.svg","style/icons/node.svg","style/icons/bitcoin.svg","style/icons/skype.svg","style/icons/slack.svg","style/icons/spotify.svg","utils/InitialStart.js","components/Game/RenderComplete.jsx","components/Game/Game.jsx","utils/ItemManipulation.js","App.jsx","index.jsx"],"names":["StartMenu","props","useState","theme","setTheme","gridSize","setGridSize","className","id","onClick","started","icons","grid","alert","console","log","RenderIncomplete","item","prevItem","prevId","currItem","currId","checkItem","src","alt","shuffleItems","items","i","randomItem","parseInt","Math","random","includes","push","createItems","shuffledItems","map","number","uuidv4","value","matched","sort","RenderComplete","motion","button","animate","backgroundColor","transition","duration","img","Game","useStopwatch","autoStart","seconds","minutes","isPhone","useMediaQuery","query","isPcOrTablet","moves","setMoves","chunk","setItems","setPrevItem","setPrevId","setCurrItem","setCurrId","checkIfItemsMatch","resetStates","itemsDoMatch","isStarted","newGrid","forEach","row","col","flag","Error","e","setTimeout","clearTimeout","changeItem","itemsDoNotMatch","arr","App","setIsStarted","numberOfPlayers","setNumberOfPlayers","document","body","style","players","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6f3d145.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const StartMenu = (props) => {\r\n  const [theme, setTheme] = useState(\"numbers\");\r\n  const [gridSize, setGridSize] = useState(4);\r\n\r\n  const startGame = () => {\r\n    props.started(true);\r\n    props.icons(theme);\r\n\r\n    props.grid(gridSize);\r\n    alert(\"Have Fun! :D\");\r\n    console.log(theme, gridSize);\r\n  };\r\n\r\n  return (\r\n    <div className=\"startMenu\">\r\n      <h1 id=\"title\">memory</h1>\r\n      <div className=\"startMenuOptions\">\r\n        <div className=\"selectTheme\">\r\n          <h3 className=\"selectSettings\" id=\"themeSelect\">\r\n            Select theme\r\n          </h3>\r\n          {theme === \"numbers\" ? (\r\n            <div className=\"select\">\r\n              <button\r\n                className=\"selected\"\r\n                onClick={() => {\r\n                  setTheme(\"numbers\");\r\n                }}\r\n              >\r\n                Numbers\r\n              </button>\r\n              <button className=\"notSelected\" onClick={() => setTheme(\"icons\")}>\r\n                Icons\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"select\">\r\n              <button\r\n                className=\"notSelected\"\r\n                onClick={() => {\r\n                  setTheme(\"numbers\");\r\n                }}\r\n              >\r\n                Numbers\r\n              </button>\r\n              <button className={`selected`} onClick={() => setTheme(\"icons\")}>\r\n                Icons\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"gridSize\">\r\n          <h3 className=\"selectSettings\">Grid size</h3>\r\n          {gridSize === 4 ? (\r\n            <div className=\"select\">\r\n              <button className=\"selected\" onClick={() => setGridSize(4)}>\r\n                4x4\r\n              </button>\r\n              <button onClick={() => setGridSize(6)}>6x6</button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"select\">\r\n              <button onClick={() => setGridSize(4)}>4x4</button>\r\n              <button className=\"selected\" onClick={() => setGridSize(6)}>\r\n                6x6\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button id=\"startButton\" onClick={() => startGame()}>\r\n          Start Game\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const RenderIncomplete = (props) => {\r\n  if (typeof props.item == \"number\") {\r\n    return (\r\n      <>\r\n        {(props.item === props.prevItem && props.id === props.prevId) ||\r\n        (props.item === props.currItem && props.id === props.currId) ? (\r\n          <button className={`notCompleted grid${props.gridSize} activeBtn`}>\r\n            {props.item}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={`notCompleted grid${props.gridSize} inactiveBtn `}\r\n            onClick={() => props.checkItem(props.item, props.id)}\r\n          >\r\n            {props.item}\r\n          </button>\r\n        )}\r\n      </>\r\n    );\r\n  } else if (typeof props.item == \"string\") {\r\n    return (\r\n      <>\r\n        {(props.item === props.prevItem && props.id === props.prevId) ||\r\n        (props.item === props.currItem && props.id === props.currId) ? (\r\n          <button className={`notCompleted grid${props.gridSize} activeBtn`}>\r\n            <img src={props.item} alt={props.item} />\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className={`notCompleted grid${props.gridSize} inactiveBtn `}\r\n            onClick={() => props.checkItem(props.item, props.id)}\r\n          >\r\n            <img src={props.item} alt={props.item} />\r\n          </button>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import amazon from \"../style/icons/amazon.svg\";\r\nimport youtube from \"../style/icons/youtube.svg\";\r\nimport facebook from \"../style/icons/facebook.svg\";\r\nimport instagram from \"../style/icons/instagram.svg\";\r\nimport twitter from \"../style/icons/twitter.svg\";\r\nimport jedi from \"../style/icons/jedi-order.svg\";\r\nimport apple from \"../style/icons/apple.svg\";\r\nimport battleNet from \"../style/icons/battle-net.svg\";\r\nimport google from \"../style/icons/google.svg\";\r\nimport github from \"../style/icons/github.svg\";\r\nimport firefox from \"../style/icons/firefox.svg\";\r\nimport chrome from \"../style/icons/chrome.svg\";\r\nimport cloudflare from \"../style/icons/cloudflare.svg\";\r\nimport node from \"../style/icons/node.svg\";\r\nimport bitcoin from \"../style/icons/bitcoin.svg\";\r\nimport skype from \"../style/icons/skype.svg\";\r\nimport slack from \"../style/icons/slack.svg\";\r\nimport spotify from \"../style/icons/spotify.svg\";\r\n\r\nexport const icons = [\r\n  amazon,\r\n  youtube,\r\n  facebook,\r\n  instagram,\r\n  twitter,\r\n  jedi,\r\n  apple,\r\n  battleNet,\r\n  google,\r\n  github,\r\n  firefox,\r\n  chrome,\r\n  cloudflare,\r\n  node,\r\n  bitcoin,\r\n  skype,\r\n  slack,\r\n  spotify,\r\n];\r\n\r\nexport const iconNames = [\r\n  \"amazon\",\r\n  \"youtube\",\r\n  \"facebook\",\r\n  \"instagram\",\r\n  \"twitter\",\r\n  \"linkedin\",\r\n  \"apple\",\r\n  \"battleNet\",\r\n  \"google\",\r\n  \"github\",\r\n  \"firefox\",\r\n  \"chrome\",\r\n  \"cloudflare\",\r\n  \"node\",\r\n  \"bitcoin\",\r\n  \"skype\",\r\n  \"slack\",\r\n  \"spotify\",\r\n];\r\n","export default __webpack_public_path__ + \"static/media/amazon.6fb4c203.svg\";","export default __webpack_public_path__ + \"static/media/youtube.47b3ae54.svg\";","export default __webpack_public_path__ + \"static/media/facebook.a0e9b803.svg\";","export default __webpack_public_path__ + \"static/media/instagram.76a811cf.svg\";","export default __webpack_public_path__ + \"static/media/twitter.d4717686.svg\";","export default __webpack_public_path__ + \"static/media/jedi-order.d3bbd3e1.svg\";","export default __webpack_public_path__ + \"static/media/apple.7207345b.svg\";","export default __webpack_public_path__ + \"static/media/battle-net.ebb13e01.svg\";","export default __webpack_public_path__ + \"static/media/google.7752ad83.svg\";","export default __webpack_public_path__ + \"static/media/github.06c3933b.svg\";","export default __webpack_public_path__ + \"static/media/firefox.67a02084.svg\";","export default __webpack_public_path__ + \"static/media/chrome.364d59d3.svg\";","export default __webpack_public_path__ + \"static/media/cloudflare.5968f19e.svg\";","export default __webpack_public_path__ + \"static/media/node.375ddf93.svg\";","export default __webpack_public_path__ + \"static/media/bitcoin.d7f7d008.svg\";","export default __webpack_public_path__ + \"static/media/skype.b6d88d3c.svg\";","export default __webpack_public_path__ + \"static/media/slack.14e7a13e.svg\";","export default __webpack_public_path__ + \"static/media/spotify.8db9311b.svg\";","import { v4 as uuidv4 } from \"uuid\";\r\nimport { icons } from \"./IconStorage\";\r\n\r\nconst createItems = (items, gridSize, theme) => {\r\n  if (theme === \"numbers\") {\r\n    for (let i = 0; i < (gridSize * gridSize) / 2; i++) {\r\n      let randomItem = parseInt(Math.random() * 100 + 1);\r\n\r\n      if (items.includes(randomItem)) {\r\n        randomItem = parseInt(Math.random() * 100 + 1);\r\n      }\r\n      items.push(randomItem);\r\n    }\r\n  } else if (theme === \"icons\") {\r\n    for (let i = 0; i < (gridSize * gridSize) / 2; i++) {\r\n      items.push(icons[i]);\r\n    }\r\n  }\r\n};\r\nexport const shuffleItems = (gridSize, theme) => {\r\n  let items = [];\r\n  createItems(items, gridSize, theme);\r\n\r\n  let shuffledItems = [...items, ...items];\r\n  shuffledItems = shuffledItems.map((number, i) =>\r\n    //give number a uuid\r\n    ({\r\n      id: uuidv4(),\r\n      value: number,\r\n      matched: false,\r\n    })\r\n  );\r\n  return shuffledItems.sort(() => Math.random() - 0.5);\r\n};\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const RenderComplete = (props) => {\r\n  return (\r\n    <>\r\n      {typeof props.item.value == \"number\" ? (\r\n        <motion.button\r\n          animate={{ backgroundColor: \"#bcced9\" }}\r\n          transition={{ duration: 0.5 }}\r\n          className={`completed grid${props.gridSize}`}\r\n        >\r\n          {props.item.value}\r\n        </motion.button>\r\n      ) : (\r\n        <motion.button\r\n          animate={{\r\n            backgroundColor: \"#bcced9\",\r\n          }}\r\n          className={`completed grid${props.gridSize}`}\r\n        >\r\n          <motion.img\r\n            transition={{ duration: 0.5 }}\r\n            //transition background color\r\n            src={props.item.value}\r\n            alt={props.item.value}\r\n          />\r\n        </motion.button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { chunk } from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { RenderIncomplete } from \"./RenderIncomplete\";\r\nimport { useStopwatch } from \"react-timer-hook\";\r\n\r\nimport { shuffleItems } from \"../../utils/InitialStart\";\r\n\r\nimport {\r\n  changeItem,\r\n  itemsDoMatch,\r\n  itemsDoNotMatch,\r\n} from \"../../utils/ItemManipulation\";\r\n\r\nimport { RenderComplete } from \"./RenderComplete\";\r\n\r\nexport const Game = (props) => {\r\n  const { seconds, minutes } = useStopwatch({ autoStart: true });\r\n  const isPhone = useMediaQuery({ query: \"(max-width: 500px)\" });\r\n  const isPcOrTablet = useMediaQuery({ query: \"(min-width: 501px)\" });\r\n  const [moves, setMoves] = useState(0);\r\n  const [gridSize] = useState(props.gridSize);\r\n  const [items, setItems] = useState(\r\n    chunk(shuffleItems(gridSize, props.theme), gridSize)\r\n  );\r\n\r\n  const [prevItem, setPrevItem] = useState(null);\r\n  const [prevId, setPrevId] = useState(null);\r\n  const [currItem, setCurrItem] = useState(null);\r\n  const [currId, setCurrId] = useState(null);\r\n\r\n  const checkItem = (item, id) => {\r\n    if (prevItem == null) {\r\n      setPrevItem(item);\r\n      setPrevId(id);\r\n    } else if (currItem == null) {\r\n      setCurrItem(item);\r\n      setCurrId(id);\r\n      checkIfItemsMatch(item);\r\n    }\r\n  };\r\n\r\n  const checkIfItemsMatch = (item) => {\r\n    if (prevItem === item) {\r\n      setMoves(moves + 1);\r\n      itemsDoMatch(resetStates);\r\n      changeItem(\r\n        items,\r\n        item,\r\n        setItems,\r\n        props.isStarted,\r\n        moves,\r\n        minutes,\r\n        seconds\r\n      );\r\n    } else {\r\n      itemsDoNotMatch(resetStates);\r\n      setMoves(moves + 1);\r\n    }\r\n  };\r\n\r\n  const resetStates = () => {\r\n    setPrevItem(null);\r\n    setPrevId(null);\r\n    setCurrItem(null);\r\n    setCurrId(null);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setItems(chunk(shuffleItems(gridSize, props.theme), gridSize));\r\n    resetStates();\r\n    alert(\"Game Reset\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"game\">\r\n      <div id=\"header\">\r\n        <h1 id=\"memoryHeader\">memory</h1>\r\n        {isPcOrTablet && (\r\n          <div id=\"controlGame\">\r\n            <button id=\"restartGame\" onClick={() => resetGame()}>\r\n              Restart\r\n            </button>\r\n            <button id=\"newGame\" onClick={() => props.isStarted(false)}>\r\n              New Game\r\n            </button>\r\n          </div>\r\n        )}\r\n        {isPhone && (\r\n          <div id=\"controlGame\">\r\n            <button id=\"restartGame\" onClick={() => props.isStarted(false)}>\r\n              Menu\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <table id=\"gameBoard\">\r\n        <tbody>\r\n          {items.map((arr, i) => (\r\n            <tr key={i}>\r\n              {arr.map((item) => {\r\n                return (\r\n                  <td key={item.id}>\r\n                    {item.matched ? (\r\n                      <RenderComplete item={item} gridSize={gridSize} />\r\n                    ) : (\r\n                      <RenderIncomplete\r\n                        prevItem={prevItem}\r\n                        item={item.value}\r\n                        checkItem={checkItem}\r\n                        id={item.id}\r\n                        prevId={prevId}\r\n                        currItem={currItem}\r\n                        currId={currId}\r\n                        gridSize={gridSize}\r\n                      />\r\n                    )}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div id=\"score\">\r\n        <div className=\"stats\">\r\n          <p>Time: </p>\r\n          <span className=\"statistic timer\">\r\n            {minutes}m:{seconds}s\r\n          </span>\r\n        </div>\r\n        <div className=\"stats \">\r\n          <p> Moves:</p> <span className=\"statistic move\">{moves}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const itemsDoMatch = (resetStates) => {\r\n  resetStates();\r\n};\r\n\r\nexport const itemsDoNotMatch = (resetStates) => {\r\n  setTimeout(() => {\r\n    resetStates();\r\n  }, 1000);\r\n  clearTimeout();\r\n};\r\n\r\nexport const changeItem = (\r\n  items,\r\n  item,\r\n  setItems,\r\n  isStarted,\r\n  moves,\r\n  minutes,\r\n  seconds\r\n) => {\r\n  let newGrid = [...items];\r\n\r\n  newGrid.forEach((row) => {\r\n    row.forEach((col) => {\r\n      if (col.value === item) {\r\n        col.matched = true;\r\n      }\r\n    });\r\n  });\r\n  setItems(newGrid);\r\n  let flag = false;\r\n  try {\r\n    newGrid.forEach((row) => {\r\n      row.forEach((col) => {\r\n        if (!col.matched) {\r\n          flag = false;\r\n          throw new Error(\"\");\r\n        } else {\r\n          flag = true;\r\n        }\r\n      });\r\n    });\r\n  } catch (e) {\r\n    return \"\";\r\n  }\r\n  setTimeout(() => {\r\n    if (flag) {\r\n      alert(\r\n        `You won! Your finished in ${moves} moves and ${minutes} minutes and ${seconds} seconds!`\r\n      );\r\n      isStarted(false);\r\n    }\r\n  }, 500);\r\n  clearTimeout();\r\n};\r\n","import { StartMenu } from \"./components/StartMenu/StartMenu\";\r\nimport React, { useState } from \"react\";\r\nimport { Game } from \"./components/Game/Game\";\r\n// import { IconGame } from \"./components/Game/IconGame\";\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(\"numbers\");\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [numberOfPlayers, setNumberOfPlayers] = useState(1);\r\n  const [gridSize, setGridSize] = useState(4);\r\n\r\n  const changeBackgroundToWhite = () => {\r\n    document.body.style = \"background-color: #f5f5f5\";\r\n  };\r\n\r\n  const changeBackgroundToDarkBlue = () => {\r\n    document.body.style = \"background-color: #152938\";\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      {!isStarted && (\r\n        <>\r\n          {changeBackgroundToDarkBlue()}\r\n          <StartMenu\r\n            started={setIsStarted}\r\n            icons={setTheme}\r\n            players={setNumberOfPlayers}\r\n            grid={setGridSize}\r\n          />\r\n        </>\r\n      )}\r\n      {isStarted && (\r\n        <>\r\n          {changeBackgroundToWhite()}\r\n          <Game\r\n            gridSize={gridSize}\r\n            players={numberOfPlayers}\r\n            isStarted={setIsStarted}\r\n            theme={theme}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./style/main.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}